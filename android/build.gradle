plugins {
    id "com.android.library"
    id "org.jetbrains.kotlin.android"
    //noinspection GradleDependency
    id "org.jetbrains.kotlin.plugin.serialization" version "1.9.0" apply true
    id "org.mozilla.rust-android-gradle.rust-android" version "0.9.6" apply true
    id "maven-publish" apply true
}

dependencies {
    //noinspection UseTomlInstead,GradleDependency
    implementation "androidx.core:core-ktx:1.12.0"
    //noinspection UseTomlInstead,GradleDependency
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
}

android {
    namespace "com.github.mycrl"
    compileSdk 35

    ndkVersion "27.0.12077973"

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }

    defaultConfig {
        minSdk 29
        targetSdk 35

        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters "arm64-v8a"
        }
    }

    buildTypes {
        release {
            debuggable false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
        }

        debug {
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        pickFirst "**/libc++_shared.so"
    }
}

def nativeModulePath = project.file("src/main/rust").absolutePath
def cargoTargetPath = project.file("../target").absolutePath
def targetApiLevel = android.defaultConfig.targetSdkVersion.apiLevel
def ndkPath = android.ndkDirectory.absolutePath

cargo {
    profile = "release"
    apiLevel = targetApiLevel
    pythonCommand = "python3"
    module = nativeModulePath
    libname = "android-native"
    targets = ["arm64"]
    targetDirectory = cargoTargetPath
    targetIncludes = ["libhylarana.so"]
    exec { spec, toolchain ->
        spec.environment("ANDROID_API_LEVEL", "$targetApiLevel")
        spec.environment("ANDROID_NDK_PATH", ndkPath)
    }
}

tasks.configureEach { task ->
    if ((task.name == "javaPreCompileDebug" || task.name == "javaPreCompileRelease")) {
        task.dependsOn "cargoBuild"
    }
}

tasks.register("copyLibcxxShared", Copy) {
    def hostOs = System.getProperty("os.name").toLowerCase()
    def hostTag = hostOs.contains("mac") ? "darwin-x86_64" : hostOs.contains("windows") ? "windows-x86_64" : "linux-x86_64"

    from "${ndkPath}/toolchains/llvm/prebuilt/${hostTag}/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so"
    into "src/main/jniLibs/arm64-v8a"
}

preBuild.dependsOn "copyLibcxxShared"

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/mycrl/hylarana"
            credentials {
                username = System.getenv("GITHUB_USERNAME")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        release(MavenPublication) {
            groupId = "com.github.mycrl"
            artifactId = "hylarana"
            version = "0.4.0"

            afterEvaluate {
                from components.release
            }
        }
    }
}
