name: publish release
on:
    push:
        tags:
            - v*
jobs:
    build:
        runs-on: "${{ matrix.os }}"
        strategy:
            matrix:
                os:
                    - windows-latest
                    - macos-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      node_modules/
                      target/
                  key: "${{ matrix.os }}-cargo"

            - name: Set up JDK
              uses: actions/setup-java@v3
              with:
                  distribution: "temurin"
                  java-version: "17"

            # installation of dependencies
            - name: Installation of dependencies
              if: runner.os == 'Macos'
              run: |
                  brew install ffmpeg@7 cmake wget
                  echo "${{ secrets.ANDROID_RELEASE_KEY }}" | base64 -d > apk-release-key.jks

            # use auto build script
            - name: Build distributions (Windows)
              if: runner.os == 'Windows'
              run: |
                  npm i -g yarn
                  yarn
                  yarn build:app:release

            - name: Build distributions (Macos)
              if: runner.os == 'Macos'
              env:
                  ANDROID_RELEASE_KEY_PASSWORD: ${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }}
              run: |
                  export ANDROID_RELEASE_KEY_FILE=$(pwd)/apk-release-key.jks
                  npm i -g yarn
                  yarn
                  yarn build:app:release
                  yarn build:android

            # compress shared libraries
            - name: Compress distributions (Windows)
              if: runner.os == 'Windows'
              run: Compress-Archive -Path ./target/app -DestinationPath ./hylarana-windows-x64.zip

            - name: Compress distributions (Macos)
              if: runner.os == 'Macos'
              run: tar -czvf hylarana-darwin-arm64.tar.gz -C ./target/app .

            # upload to artifact
            - name: Upload artifact (Windows)
              if: runner.os == 'Windows'
              uses: actions/upload-artifact@v4
              with:
                  name: hylarana-windows-x64
                  path: ./hylarana-windows-x64-.zip

            - name: Upload artifact (Macos)
              if: runner.os == 'Macos'
              uses: actions/upload-artifact@v4
              with:
                  name: hylarana-darwin-arm64
                  path: ./hylarana-darwin-arm64.tar.gz

            - name: Upload artifact (Android)
              if: runner.os == 'Macos'
              uses: actions/upload-artifact@v4
              with:
                  name: android-apk
                  path: ./target/app/Hylarana.apk

    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download All Artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts
            - name: Create release
              id: create_release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
              with:
                  tag_name: ${{ github.ref_name }}
                  name: ${{ github.ref_name }}
                  draft: false
                  prerelease: false
                  files: artifacts/**/*
